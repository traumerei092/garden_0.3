# Generated by Django 5.0 on 2025-08-03 15:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Alcohol",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "verbose_name": "好きなお酒・ドリンク",
                "verbose_name_plural": "好きなお酒・ドリンク",
            },
        ),
        migrations.CreateModel(
            name="AlcoholCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "verbose_name": "お酒のジャンル",
                "verbose_name_plural": "お酒のジャンル",
            },
        ),
        migrations.CreateModel(
            name="BloodType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "verbose_name": "血液型",
                "verbose_name_plural": "血液型",
            },
        ),
        migrations.CreateModel(
            name="BudgetRange",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("min_price", models.IntegerField(blank=True, null=True)),
                ("max_price", models.IntegerField(blank=True, null=True)),
                ("order", models.IntegerField(default=0)),
            ],
            options={
                "verbose_name": "希望予算",
                "verbose_name_plural": "希望予算",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="DietaryPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "食事制限・好み",
                "verbose_name_plural": "食事制限・好み",
            },
        ),
        migrations.CreateModel(
            name="ExerciseFrequency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("order", models.IntegerField(default=0)),
            ],
            options={
                "verbose_name": "運動頻度",
                "verbose_name_plural": "運動頻度",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="ExerciseHabit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "verbose_name": "運動",
                "verbose_name_plural": "運動",
            },
        ),
        migrations.CreateModel(
            name="Hobby",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "verbose_name": "趣味",
                "verbose_name_plural": "趣味",
            },
        ),
        migrations.CreateModel(
            name="InterestCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "verbose_name": "興味カテゴリ",
                "verbose_name_plural": "興味カテゴリ",
            },
        ),
        migrations.CreateModel(
            name="MBTI",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "verbose_name": "MBTI",
                "verbose_name_plural": "MBTI",
            },
        ),
        migrations.CreateModel(
            name="SocialPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "verbose_name": "交友関係",
                "verbose_name_plural": "交友関係",
            },
        ),
        migrations.CreateModel(
            name="UserAtmospherePreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.IntegerField(
                        help_text="-2から+2の範囲で設定", verbose_name="好みのスコア"
                    ),
                ),
            ],
            options={
                "verbose_name": "ユーザー雰囲気好み",
                "verbose_name_plural": "ユーザー雰囲気好み",
            },
        ),
        migrations.CreateModel(
            name="VisitPurpose",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("order", models.IntegerField(default=0)),
            ],
            options={
                "verbose_name": "利用目的",
                "verbose_name_plural": "利用目的",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="AlcoholBrand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="brands",
                        to="accounts.alcoholcategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "お酒の銘柄",
                "verbose_name_plural": "お酒の銘柄",
            },
        ),
        migrations.CreateModel(
            name="DrinkStyle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="drink_styles",
                        to="accounts.alcoholcategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "カクテル・飲み方",
                "verbose_name_plural": "カクテル・飲み方",
            },
        ),
        migrations.CreateModel(
            name="Interest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interests",
                        to="accounts.interestcategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "興味",
                "verbose_name_plural": "興味",
            },
        ),
        migrations.CreateModel(
            name="UserAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "uid",
                    models.CharField(max_length=30, unique=True, verbose_name="uid"),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=255, unique=True, verbose_name="メールアドレス"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="名前"
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="avatar",
                        verbose_name="プロフィール画像",
                    ),
                ),
                (
                    "introduction",
                    models.TextField(blank=True, null=True, verbose_name="自己紹介"),
                ),
                ("gender", models.CharField(blank=True, max_length=20)),
                ("birthdate", models.DateField(blank=True, null=True)),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新日"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="作成日"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "work_info",
                    models.TextField(blank=True, null=True, verbose_name="仕事情報"),
                ),
                (
                    "occupation",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="職業"
                    ),
                ),
                (
                    "industry",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="業種"
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="役職"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "alcohols",
                    models.ManyToManyField(
                        blank=True, related_name="users", to="accounts.alcohol"
                    ),
                ),
                (
                    "alcohol_brands",
                    models.ManyToManyField(
                        blank=True, related_name="users", to="accounts.alcoholbrand"
                    ),
                ),
                (
                    "alcohol_categories",
                    models.ManyToManyField(
                        blank=True, related_name="users", to="accounts.alcoholcategory"
                    ),
                ),
                (
                    "blood_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="users",
                        to="accounts.bloodtype",
                    ),
                ),
                (
                    "budget_range",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="users",
                        to="accounts.budgetrange",
                    ),
                ),
                (
                    "dietary_preference",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="users",
                        to="accounts.dietarypreference",
                    ),
                ),
                (
                    "drink_styles",
                    models.ManyToManyField(
                        blank=True, related_name="users", to="accounts.drinkstyle"
                    ),
                ),
                (
                    "exercise_frequency",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="users",
                        to="accounts.exercisefrequency",
                    ),
                ),
                (
                    "exercise_habits",
                    models.ManyToManyField(
                        blank=True, related_name="users", to="accounts.exercisehabit"
                    ),
                ),
                (
                    "hobbies",
                    models.ManyToManyField(
                        blank=True, related_name="users", to="accounts.hobby"
                    ),
                ),
                (
                    "interests",
                    models.ManyToManyField(
                        blank=True, related_name="users", to="accounts.interest"
                    ),
                ),
                (
                    "mbti",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="users",
                        to="accounts.mbti",
                    ),
                ),
                (
                    "social_preferences",
                    models.ManyToManyField(
                        blank=True, related_name="users", to="accounts.socialpreference"
                    ),
                ),
            ],
            options={
                "verbose_name": "ユーザーアカウント",
                "verbose_name_plural": "ユーザーアカウント",
            },
        ),
    ]
